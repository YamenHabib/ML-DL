tmp = nn.Sequential( # Sequential,
    nn.Conv2d(3,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
    nn.BatchNorm2d(16),
    nn.ReLU(),
    nn.Sequential( # Sequential,
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                    nn.ReLU(),
                    nn.Conv2d(16,16,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(16),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
    ),
    nn.Sequential( # Sequential,
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(16,32,(3, 3),(2, 2),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                nn.Sequential( # Sequential,
                    nn.AvgPool2d((1, 1),(2, 2)),
                    LambdaReduce(lambda x,y,dim=1: torch.cat((x,y),dim), # Concat,
                        Lambda(lambda x: x), # Identity,
                        Lambda(lambda x: x * 0), #resnet mulconstant,
                    ),
                ),
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                    nn.ReLU(),
                    nn.Conv2d(32,32,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(32),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
    ),
    nn.Sequential( # Sequential,
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(32,64,(3, 3),(2, 2),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                nn.Sequential( # Sequential,
                    nn.AvgPool2d((1, 1),(2, 2)),
                    LambdaReduce(lambda x,y,dim=1: torch.cat((x,y),dim), # Concat,
                        Lambda(lambda x: x), # Identity,
                        Lambda(lambda x: x * 0), #resnet mulconstant,
                    ),
                ),
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
        nn.Sequential( # Sequential,
            LambdaMap(lambda x: x, # ConcatTable,
                nn.Sequential( # Sequential,
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                    nn.ReLU(),
                    nn.Conv2d(64,64,(3, 3),(1, 1),(1, 1),1,1,bias=False),
                    nn.BatchNorm2d(64),
                ),
                Lambda(lambda x: x), # Identity,
            ),
            LambdaReduce(lambda x,y: x+y), # CAddTable,
            nn.ReLU(),
        ),
    ),
    nn.AvgPool2d((8, 8),(1, 1)),
    Lambda(lambda x: x.view(x.size(0),-1)), # View,
    nn.Sequential(Lambda(lambda x: x.view(1,-1) if 1==len(x.size()) else x ),nn.Linear(64,10)), # Linear,
)